from qgis.PyQt.QtWidgets import QAction
from qgis.core import QgsProject, QgsWkbTypes
from qgis.utils import iface

class YourPluginName:
    def __init__(self, iface):
        self.iface = iface
        self.plugin_dir = os.path.dirname(__file__)
        self.toolbar = self.iface.addToolBar('YourPluginName')
        self.toolbar.setObjectName('YourPluginName')
        self.action = None

    def initGui(self):
        self.action = QAction('Toggle Select Count', self.iface.mainWindow())
        self.action.setCheckable(True)
        self.action.triggered.connect(self.toggle_plugin)
        self.toolbar.addAction(self.action)

    def toggle_plugin(self, checked):
        if checked:
            self.enable_plugin()
        else:
            self.disable_plugin()

    def enable_plugin(self):
        self.select_count()
        for layer in QgsProject.instance().mapLayers().values():
            layer.selectionChanged.connect(self.select_count)

    def disable_plugin(self):
        for layer in QgsProject.instance().mapLayers().values():
            layer.selectionChanged.disconnect(self.select_count)

    def select_count(self):
        total_point_count = 0
        total_line_count = 0
        total_polygon_count = 0

        for layer in QgsProject.instance().mapLayers().values():
            if layer.selectedFeatureCount() > 0:
                point_count = 0
                line_count = 0
                polygon_count = 0

                for feature in layer.selectedFeatures():
                    geom = feature.geometry()
                    if geom.type() == QgsWkbTypes.PointGeometry:
                        point_count += 1
                    elif geom.type() == QgsWkbTypes.LineGeometry:
                        line_count += 1
                    elif geom.type() == QgsWkbTypes.PolygonGeometry:
                        polygon_count += 1

                total_point_count += point_count
                total_line_count += line_count
                total_polygon_count += polygon_count

                print(f"Camada: {layer.name()}")
                print(f"  Pontos selecionados: {point_count}")
                print(f"  Linhas selecionadas: {line_count}")
                print(f"  Polígonos selecionados: {polygon_count}")
                print()

        print("Resultados Totais:")
        print(f"  Total de pontos selecionados: {total_point_count}")
        print(f"  Total de linhas selecionadas: {total_line_count}")
        print(f"  Total de polígonos selecionados: {total_polygon_count}")

    def unload(self):
        self.iface.removeToolBarIcon(self.action)
        del self.toolbar
